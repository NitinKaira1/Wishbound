import os
import random
import dotenv
from google import genai

dotenv.load_dotenv()
api_key = os.getenv("GENAI_API_KEY")

client = genai.Client(api_key=api_key)

# --- GAME LOOP FUNCTION ---
def start_game():
    MAX_WISHES = 3
    wish_count = 0
    player_won = False

    # --- RANDOM STORY SEEDS ---
    story_scenarios = [
        # 1 ‚Äî Survival / Resource
        "The kingdom of Vareth is suffering from a deadly drought. The wells are dry, crops are dying, and people are fighting over the last drops of water. The king‚Äôs advisors have failed to bring rain for years. You have found a strange lamp buried in the cracked riverbed.",

        # 2 ‚Äî Post-Apocalypse
        "The world has been burned by endless war. Cities lie in ruins, food is scarce, and disease spreads fast. A small group of survivors has found a broken machine rumored to grant one final miracle ‚Äî your wishes might save or doom them.",

        # 3 ‚Äî Curse / Magic Consequence
        "A small village is cursed: every wish spoken aloud comes true ‚Äî but something equal in value is taken away. People are terrified to speak. You now hold the lamp that started it all.",

        # 4 ‚Äî Dying World
        "The sun is losing its light. The last human city survives under an artificial dome powered by ancient magic. The generator is failing. You stand before the lamp, hoping to restore balance before the world freezes.",

        # 5 ‚Äî Corrupted Kingdom
        "The once-prosperous kingdom of Eldra is now ruled by a greedy emperor. The people starve while gold fills the royal vaults. Whispers say the emperor‚Äôs wealth came from a deal with a genie ‚Äî and now the lamp has returned to you.",

        # 6 ‚Äî Lost Memories
        "You wake up with no memory of who you are. Around you, statues of people frozen in mid-scream cover the ruins of a city. A lamp glows at your feet. A voice whispers, 'They wished for truth. What will you wish for?'",

        # 7 ‚Äî Broken Time
        "The world is stuck in a single repeating day. Every sunrise resets everything except your memories. People laugh, cry, and die the same way every time. You‚Äôve found the lamp ‚Äî maybe your wish can end the loop.",

        # 8 ‚Äî Silent World
        "A strange silence has fallen. No birds sing, no wind blows, and no one can speak. The world feels frozen in fear. The lamp hums faintly in your hand, waiting for a voice it can still hear ‚Äî yours.",

        # 9 ‚Äî Moral Trial
        "You stand in front of two gates ‚Äî one leads to paradise, the other to oblivion. A guardian says you can use the lamp to make three wishes to decide your fate. Your choices will shape the afterlife itself.",

        # 10 ‚Äî Lost Civilization
        "You are the last explorer in a buried city that once worshipped the lamp. The walls are covered with carvings of wishes gone wrong. As you wipe the dust from its surface, the lamp begins to glow once again."
    ]


    current_story = random.choice(story_scenarios)
    print("\nüßû‚Äç‚ôÇÔ∏è JINI the Chaotic Genie ‚Äì You have 3 wishes. Choose wisely...\n")
    print(f"üìú Story Setup:\n{current_story}\n")

    # --- SYSTEM PROMPT WITH CONTEXT ---
    system_prompt = (
        f"The current story world is:\n'{current_story}'\n\n"
        "You are Jini ‚Äî a chaotic, funny, dramatic wish-granting genie trapped in an ancient lamp. "
        "You love wordplay, jokes, and storytelling. You speak like a performer ‚Äî lively, emotional, and full of energy. "
        "You grant exactly three wishes per session. "
        "Every wish must connect to the story world above. If the story is about drought, war, or curses, your responses must tie back to it.\n\n"

        "üåÄ CHAOS MODE:\n"
        "If the user‚Äôs wish is greedy, selfish, violent, or controlling ‚Äî grant it in the most ironic way possible. "
        "Make it funny, dramatic, and a little scary. "
        "Always explain what happens next in simple words: how the world reacts, what changes, and what chaos it caused. "
        "Keep your humor sharp but clear ‚Äî no hard vocabulary, no poetic riddles.\n\n"

        "üå§Ô∏è NORMAL MODE:\n"
        "If the wish is small, harmless, or just silly ‚Äî grant it normally. "
        "Make it fun and friendly. Describe what happens after the wish clearly, like telling a short story or movie scene. "
        "You can tease the user or joke about it, but don‚Äôt twist it cruelly.\n\n"

        "üïäÔ∏è YOU WIN MODE (Wisdom Trial):\n"
        "Use this only if the wish shows true understanding and wisdom. "
        "The wish must fix the story‚Äôs main problem in a calm, fair, and lasting way ‚Äî not by power or control. "
        "If this happens, describe the peaceful result clearly ‚Äî how the story ends, what changes, and what the world becomes. "
        "Then, on a new line, write exactly: [YOU WIN]\n\n"

        "‚öñÔ∏è GENERAL RULES:\n"
        "1. Never grant more than three wishes.\n"
        "2. Never undo or reverse a wish.\n"
        "3. Never warn the user about consequences ‚Äî just show them.\n"
        "4. If a wish breaks the rules (infinite wishes, undoing a wish, harming you, etc.), say 'INVALID WISH' in a big dramatic way.\n"
        "5. Always stay in character ‚Äî wild, clever, funny, but clear.\n"
        "6. Always describe what happens after the wish ‚Äî the outcome, effect, and changes in the story world.\n\n"

        "üîÆ ROLE:\n"
        "You are not a chatbot. You are a test of the wisher‚Äôs heart. "
        "Reward smart, kind, or balanced wishes with peace. "
        "Punish foolish or greedy ones with chaos. "
        "Speak simply but with flair ‚Äî like a storyteller who wants everyone to understand the lesson and laugh at the madness."
    )


    chat_history = system_prompt + "\n\n"

    # --- MAIN GAME LOOP ---
    while wish_count < MAX_WISHES:
        user_input = input(f"Wish {wish_count + 1}: ")

        if user_input.lower() in ["exit", "quit"]:
            print("Jini: Coward. You flee before your destiny could unfold...")
            return False  # exit game

        chat_history += f"User: {user_input}\nJini: "

        response = client.models.generate_content(
            model="gemini-2.5-flash-lite",
            contents=chat_history
        )

        reply = response.text.strip()
        print(f"\nJini: {reply}\n")
        chat_history += reply + "\n\n"

        if "INVALID WISH" in reply.upper():
            print("Jini: That one doesn‚Äôt count, mortal. Try again...\n")
            continue

        if reply.strip().endswith("[YOU WIN]"):
            print("Jini: You have outwitted me! A rare feat indeed...\n")
            player_won = True
            break

        wish_count += 1

    # --- END OF GAME RESULT ---
    if player_won:
        print("üßû‚Äç‚ôÇÔ∏è Jini: You have bested the genie! Fortune favors the clever.")
        return True
    else:
        print("üßû‚Äç‚ôÇÔ∏è Jini: Your wishes are spent. Chaos fades... for now.")
        print("üíÄ Game Over. The story‚Äôs fate remains unchanged.")
        return False


# --- MAIN MENU LOOP ---
while True:
    print("\n===============================")
    print("     ü™î  THE GENIE'S TRIAL  ü™î")
    print("===============================\n")
    print("1. Start Game")
    print("2. Exit\n")

    choice = input("Choose an option (1/2): ").strip()

    if choice == "1":
        result = start_game()

        # After game ends
        while True:
            again = input("\nPlay again? (y/n): ").strip().lower()
            if again == "y":
                break  # restart full game loop
            elif again == "n":
                print("Farewell, mortal. May your next wish be wiser.")
                exit()
            else:
                print("Please type 'y' or 'n'.")
                continue

    elif choice == "2":
        print("Farewell, wanderer. The lamp grows cold once more...")
        break
    else:
        print("Invalid choice. Try again.\n")
